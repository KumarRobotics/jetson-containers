#
# Dockerfile for building ROS2 from source
#
ARG BASE_IMAGE
FROM ${BASE_IMAGE}

ARG ROS_PACKAGE=ros_base \
    ROS_VERSION=humble

ENV ROS_DISTRO=${ROS_VERSION} \
    ROS_ROOT=/opt/ros/${ROS_VERSION} \
    ROS_PYTHON_VERSION=3 \
    RMW_IMPLEMENTATION=rmw_fastrtps_cpp \
    DEBIAN_FRONTEND=noninteractive \
    SHELL=/bin/bash
    
SHELL ["/bin/bash", "-c"] 

ENV DEBIAN_FRONTEND=noninteractive

# Set locale
RUN apt-get update && apt-get install -y locales
RUN locale-gen en_US en_US.UTF-8 && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
ENV LANG=en_US.UTF-8

# Install base dependencies 
RUN apt-get update && apt-get install -y \
    curl \
    gnupg2 \
    lsb-release \
    python3-pip \
    software-properties-common \
    build-essential \
    cmake \
    git 

# Add the ROS2 repository
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

# Update and install ROS2 Humble
RUN apt-get update && apt-get install -y \
    ros-humble-ros-base \
    ros-dev-tools \
    python3-colcon-common-extensions

# Initialize rosdep
RUN rosdep init && rosdep update

# commands will be appended/run by the entrypoint which sources the ROS environment
COPY ros_entrypoint.sh ros2_install.sh /

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["/bin/bash"]

